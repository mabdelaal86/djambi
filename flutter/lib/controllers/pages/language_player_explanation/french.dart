import 'package:flame/components.dart';
import 'package:flutter/widgets.dart';

import '../../configs.dart';
import '../base.dart';

class GameSummaryFrenchGame extends BasePage {
  @override
  Future<void> onLoad() async {
    await super.onLoad();

    // D√©finir la taille de la zone d√©filable
    final frameSize = Vector2(
      bodySize.x - Configs.smallMargin * 2,
      bodySize.y - Configs.smallMargin * 2,
    );

    // D√©finir les sections des instructions
    final sections = <Section>[
      Section(
        title: 'üéØ Objectif',
        content:
            "√ätre le dernier joueur avec votre Chef en vie. √âliminer les Chefs des autres joueurs vous permet de prendre le contr√¥le de leurs pi√®ces restantes.",
      ),
      Section(
        title: 'üß© Composants du jeu',
        content:
            "Joueurs : 4 (Rouge, Bleu, Jaune, Vert).\n"
            "Plateau : grille 9√ó9 avec la case centrale (E5) d√©sign√©e comme le Labyrinthe, symbolisant le si√®ge du pouvoir.\n"
            "Pi√®ces par joueur :\n"
            "- 1 Chef\n"
            "- 1 Assassin\n"
            "- 1 Reporter\n"
            "- 1 Diplomate\n"
            "- 1 N√©cromobile\n"
            "- 4 Miliciens",
      ),
      Section(
        title: 'üïπÔ∏è M√©caniques de jeu',
        content:
            "Ordre de jeu : Les joueurs jouent √† tour de r√¥le dans une s√©quence fixe.",
      ),
      Section(
        title: 'D√©placement :',
        content:
            "- Chef, Assassin, Reporter, Diplomate, N√©cromobile : Se d√©placent d'un nombre quelconque de cases en lignes droites (comme la reine aux √©checs), sans sauter par-dessus d'autres pi√®ces.\n"
            "- Miliciens : Se d√©placent de 1 ou 2 cases dans n'importe quelle direction.",
      ),
      Section(
        title: '‚öîÔ∏è Actions et capacit√©s',
        content: "",
      ),
      Section(
        title: "Chef :",
        content:
            "- Peut tuer en se d√©pla√ßant sur la pi√®ce d'un adversaire.\n"
            "- Place le cadavre sur n'importe quelle case inoccup√©e, y compris le Labyrinthe.\n"
            "- Lorsqu'il occupe le Labyrinthe, il gagne un tour suppl√©mentaire apr√®s chaque mouvement d'un adversaire.\n"
            "- Ne peut pas √™tre tu√© par les Miliciens lorsqu'il est dans le Labyrinthe.",
      ),
      Section(
        title: "Assassin :",
        content:
            "- Tue en se d√©pla√ßant sur la pi√®ce d'un adversaire.\n"
            "- Place le cadavre sur la case d'origine de l'Assassin.",
      ),
      Section(
        title: "Reporter :",
        content:
            "- Tue une pi√®ce adjacente (orthogonalement) sans se d√©placer dessus.\n"
            "- Le cadavre reste √† sa position d'origine.\n"
            "- Peut choisir de ne pas tuer.",
      ),
      Section(
        title: "Diplomate :",
        content:
            "- D√©place une pi√®ce vivante d'un adversaire en √©changeant les places.\n"
            "- La pi√®ce d√©plac√©e est plac√©e sur n'importe quelle case inoccup√©e, sauf le Labyrinthe (sauf si c'est un Chef).",
      ),
      Section(
        title: "N√©cromobile :",
        content:
            "- D√©place un cadavre en √©changeant les places.\n"
            "- Le cadavre est plac√© sur n'importe quelle case inoccup√©e, sauf le Labyrinthe.",
      ),
      Section(
        title: "Miliciens :",
        content:
            "- Tuent en se d√©pla√ßant sur la pi√®ce d'un adversaire.\n"
            "- Placent le cadavre sur n'importe quelle case inoccup√©e, sauf le Labyrinthe.\n"
            "- Ne peuvent pas tuer un Chef occupant le Labyrinthe.",
      ),
      Section(
        title: 'üèõÔ∏è Le Labyrinthe (E5)',
        content:
            "Seul le Chef peut occuper cette case centrale. Un Chef dans le Labyrinthe est consid√©r√© comme 'au pouvoir' et gagne un tour suppl√©mentaire apr√®s chaque mouvement d'un adversaire. Lorsqu'il est dans le Labyrinthe, le Chef est immunis√© contre les attaques des Miliciens. Les autres pi√®ces peuvent traverser le Labyrinthe mais ne peuvent pas s'y arr√™ter.",
      ),
      Section(
        title: 'üßü Cadavres',
        content:
            "Lorsqu'une pi√®ce est tu√©e, elle devient un cadavre et reste sur le plateau, agissant comme un obstacle. Les cadavres peuvent √™tre d√©plac√©s par la N√©cromobile vers des positions strat√©giques.",
      ),
      Section(
        title: 'ü§ù Alliances et trahisons',
        content:
            "Les joueurs peuvent former des alliances informelles, mais la trahison est autoris√©e et souvent strat√©gique. Il n'y a pas de r√®gles officielles r√©gissant les alliances ; elles sont bas√©es sur la n√©gociation entre les joueurs.",
      ),
      Section(
        title: 'üèÅ Fin de partie',
        content:
            "La partie se termine lorsqu'un seul Chef reste en vie. Lorsqu'un Chef est tu√©, le joueur qui l'a √©limin√© prend le contr√¥le des pi√®ces restantes du joueur d√©c√©d√©. Si un Chef est entour√© de cadavres et n'a pas de N√©cromobile, il est consid√©r√© comme √©limin√©.",
      ),
    ];

    // Combiner toutes les sections en une seule cha√Æne
    final fullText = sections
        .map((section) => '${section.title}\n${section.content}')
        .join('\n\n');

    // D√©finir le style du texte
    final textPaint = TextPaint(
      style: TextStyle(
        fontSize: 18.0,
        color: const Color(0xFFFFFFFF),
      ),
    );

    // Cr√©er un composant de bo√Æte de texte d√©filable
    final scrollBox = ScrollTextBoxComponent(
      text: fullText,
      textRenderer: textPaint,
      size: frameSize,
      position: Vector2(Configs.smallMargin, Configs.smallMargin),
      boxConfig: TextBoxConfig(
        margins: const EdgeInsets.all(10),
      ),
    );

    // Ajouter la bo√Æte de texte d√©filable au jeu
    await add(scrollBox);
  }
}

// Mod√®le de section
class Section {
  final String title;
  final String content;
  Section({required this.title, required this.content});
}
